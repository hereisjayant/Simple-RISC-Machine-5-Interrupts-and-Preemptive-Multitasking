
C:/Users/herei/Desktop/CPEN/CPEN211_Winter_labs/From_Github/lab10/address_map_arm.axf:     file format elf32-littlearm


Disassembly of section .vectors:

00000000 <__cs3_interrupt_vector>:
   0:	ea000051 	b	14c <_start>
   4:	ea000062 	b	194 <SERVICE_UND>
   8:	ea000062 	b	198 <SERVICE_SVC>
   c:	ea000063 	b	1a0 <SERVICE_ABT_INST>
  10:	ea000061 	b	19c <SERVICE_ABT_DATA>
  14:	00000000 	.word	0x00000000
  18:	ea000061 	b	1a4 <SERVICE_IRQ>
  1c:	ea000072 	b	1ec <SERVICE_FIQ>

Disassembly of section .text:

00000040 <CONFIG_GIC>:
  40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  44:	e3a00049 	mov	r0, #73	; 0x49
  48:	e3a01001 	mov	r1, #1
  4c:	eb00000d 	bl	88 <CONFIG_INTERRUPT>
  50:	e3a00050 	mov	r0, #80	; 0x50
  54:	e3a01001 	mov	r1, #1
  58:	eb00000a 	bl	88 <CONFIG_INTERRUPT>
  5c:	e3a0001d 	mov	r0, #29
  60:	e3a01001 	mov	r1, #1
  64:	eb000007 	bl	88 <CONFIG_INTERRUPT>
  68:	e59f0060 	ldr	r0, [pc, #96]	; d0 <HPS_WATCHDOG1_IRQ+0x4>
  6c:	e59f1060 	ldr	r1, [pc, #96]	; d4 <HPS_WATCHDOG1_IRQ+0x8>
  70:	e5801004 	str	r1, [r0, #4]
  74:	e3a01001 	mov	r1, #1
  78:	e5801000 	str	r1, [r0]
  7c:	e59f0054 	ldr	r0, [pc, #84]	; d8 <HPS_WATCHDOG1_IRQ+0xc>
  80:	e5801000 	str	r1, [r0]
  84:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000088 <CONFIG_INTERRUPT>:
  88:	e92d4030 	push	{r4, r5, lr}
  8c:	e1a041a0 	lsr	r4, r0, #3
  90:	e3c44003 	bic	r4, r4, #3
  94:	e59f2040 	ldr	r2, [pc, #64]	; dc <HPS_WATCHDOG1_IRQ+0x10>
  98:	e0824004 	add	r4, r2, r4
  9c:	e200201f 	and	r2, r0, #31
  a0:	e3a05001 	mov	r5, #1
  a4:	e1a02215 	lsl	r2, r5, r2
  a8:	e5943000 	ldr	r3, [r4]
  ac:	e1833002 	orr	r3, r3, r2
  b0:	e5843000 	str	r3, [r4]
  b4:	e3c04003 	bic	r4, r0, #3
  b8:	e59f2020 	ldr	r2, [pc, #32]	; e0 <HPS_WATCHDOG1_IRQ+0x14>
  bc:	e0824004 	add	r4, r2, r4
  c0:	e2002003 	and	r2, r0, #3
  c4:	e0824004 	add	r4, r2, r4
  c8:	e5c41000 	strb	r1, [r4]
  cc:	e8bd8030 	pop	{r4, r5, pc}
  d0:	fffec100 	.word	0xfffec100
  d4:	0000ffff 	.word	0x0000ffff
  d8:	fffed000 	.word	0xfffed000
  dc:	fffed100 	.word	0xfffed100
  e0:	fffed800 	.word	0xfffed800

000000e4 <KEY_ISR>:
  e4:	e59f0054 	ldr	r0, [pc, #84]	; 140 <END_KEY_ISR+0x8>
  e8:	e590100c 	ldr	r1, [r0, #12]
  ec:	e3a0200f 	mov	r2, #15
  f0:	e580200c 	str	r2, [r0, #12]
  f4:	e59f0048 	ldr	r0, [pc, #72]	; 144 <END_KEY_ISR+0xc>

000000f8 <CHECK_KEY0>:
  f8:	e3a03001 	mov	r3, #1
  fc:	e0133001 	ands	r3, r3, r1
 100:	0a000001 	beq	10c <CHECK_KEY1>
 104:	e3a02001 	mov	r2, #1
 108:	ea00000a 	b	138 <END_KEY_ISR>

0000010c <CHECK_KEY1>:
 10c:	e3a03002 	mov	r3, #2
 110:	e0133001 	ands	r3, r3, r1
 114:	0a000001 	beq	120 <CHECK_KEY2>
 118:	e3a02002 	mov	r2, #2
 11c:	ea000005 	b	138 <END_KEY_ISR>

00000120 <CHECK_KEY2>:
 120:	e3a03004 	mov	r3, #4
 124:	e0133001 	ands	r3, r3, r1
 128:	0a000001 	beq	134 <CHECK_KEY3>
 12c:	e3a02004 	mov	r2, #4
 130:	ea000000 	b	138 <END_KEY_ISR>

00000134 <CHECK_KEY3>:
 134:	e3a02008 	mov	r2, #8

00000138 <END_KEY_ISR>:
 138:	e5802000 	str	r2, [r0]
 13c:	e12fff1e 	bx	lr
 140:	ff200050 	.word	0xff200050
 144:	ff200000 	.word	0xff200000

00000148 <COUNTER>:
            B       SERVICE_ABT_INST        // aborted prefetch vector
            B       SERVICE_ABT_DATA        // aborted data vector
.word       0 // unused vector

            B       SERVICE_IRQ             // IRQ interrupt vector
            B       SERVICE_FIQ             // FIQ interrupt vector
 148:	00000000 	.word	0x00000000

0000014c <_start>:

.text
.global     _start
_start:
/* Set up stack pointers for IRQ and SVC processor modes */
            MOV     R1, #0b11010010         // interrupts masked, MODE = IRQ
 14c:	e3a010d2 	mov	r1, #210	; 0xd2
            MSR     CPSR_c, R1              // change to IRQ mode
 150:	e121f001 	msr	CPSR_c, r1
            LDR     SP, =A9_ONCHIP_END - 3  // set IRQ stack to top of A9 onchip memory
 154:	e3e0d003 	mvn	sp, #3
/* Change to SVC (supervisor) mode with interrupts disabled */
            MOV     R1, #0b11010011         // interrupts masked, MODE = SVC
 158:	e3a010d3 	mov	r1, #211	; 0xd3
            MSR     CPSR, R1                // change to supervisor mode
 15c:	e129f001 	msr	CPSR_fc, r1
            LDR     SP, =DDR_END - 3        // set SVC stack to top of DDR3 memory
 160:	e3e0d10f 	mvn	sp, #-1073741821	; 0xc0000003

            BL      CONFIG_GIC              // configure the ARM generic interrupt controller
 164:	ebffffb5 	bl	40 <CONFIG_GIC>

                                            // write to the pushbutton KEY interrupt mask register
            LDR     R0, =KEY_BASE           // pushbutton KEY base address
 168:	e59f0080 	ldr	r0, [pc, #128]	; 1f0 <SERVICE_FIQ+0x4>
            MOV     R1, #0xF               // set interrupt mask bits
 16c:	e3a0100f 	mov	r1, #15
            STR     R1, [R0, #0x8]          // interrupt mask register is (base + 8)
 170:	e5801008 	str	r1, [r0, #8]

                                            // enable IRQ interrupts in the processor
            MOV     R0, #0b01010011         // IRQ unmasked, MODE = SVC
 174:	e3a00053 	mov	r0, #83	; 0x53
            MSR     CPSR_c, R0
 178:	e121f000 	msr	CPSR_c, r0

            LDR     R0, =MPCORE_PRIV_TIMER // base address of the timer
 17c:	e59f0070 	ldr	r0, [pc, #112]	; 1f4 <SERVICE_FIQ+0x8>
            LDR     R1, =100000000        //This is the load value => 100000000/200MHZ = .5 second
 180:	e59f1070 	ldr	r1, [pc, #112]	; 1f8 <SERVICE_FIQ+0xc>
            STR     R1, [R0]              //Writes to the Load of the TIMER
 184:	e5801000 	str	r1, [r0]
            MOV     R3, #0b111
 188:	e3a03007 	mov	r3, #7
            STR     R3, [R0, #0x8]
 18c:	e5803008 	str	r3, [r0, #8]

00000190 <IDLE>:

IDLE:
            B       IDLE                    // main program simply idles
 190:	eafffffe 	b	190 <IDLE>

00000194 <SERVICE_UND>:

/* Define the exception service routines */

/*--- Undefined instructions --------------------------------------------------*/
SERVICE_UND:
            B       SERVICE_UND
 194:	eafffffe 	b	194 <SERVICE_UND>

00000198 <SERVICE_SVC>:

/*--- Software interrupts -----------------------------------------------------*/
SERVICE_SVC:
            B       SERVICE_SVC
 198:	eafffffe 	b	198 <SERVICE_SVC>

0000019c <SERVICE_ABT_DATA>:

/*--- Aborted data reads ------------------------------------------------------*/
SERVICE_ABT_DATA:
            B       SERVICE_ABT_DATA
 19c:	eafffffe 	b	19c <SERVICE_ABT_DATA>

000001a0 <SERVICE_ABT_INST>:

/*--- Aborted instruction fetch -----------------------------------------------*/
SERVICE_ABT_INST:
            B       SERVICE_ABT_INST
 1a0:	eafffffe 	b	1a0 <SERVICE_ABT_INST>

000001a4 <SERVICE_IRQ>:

/*--- IRQ ---------------------------------------------------------------------*/
SERVICE_IRQ:
            PUSH    {R0-R7, LR}
 1a4:	e92d40ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}

/* Read the ICCIAR from the CPU interface */
            LDR     R4, =MPCORE_GIC_CPUIF
 1a8:	e59f404c 	ldr	r4, [pc, #76]	; 1fc <SERVICE_FIQ+0x10>
            LDR     R5, [R4, #ICCIAR]       // read from ICCIAR
 1ac:	e594500c 	ldr	r5, [r4, #12]

            CMP     R5, #KEYS_IRQ           //If the R5 is equal to the KEYS_IQR, then
 1b0:	e3550049 	cmp	r5, #73	; 0x49
            BEQ      FPGA_IRQ1_HANDLER
 1b4:	0a000006 	beq	1d4 <FPGA_IRQ1_HANDLER>

            LDR     R0, =LED_BASE           //THis gets the base of the LEDS
 1b8:	e59f0040 	ldr	r0, [pc, #64]	; 200 <SERVICE_FIQ+0x14>
            LDR     R1, =COUNTER            //THis get the COUNTER
 1bc:	e59f1040 	ldr	r1, [pc, #64]	; 204 <SERVICE_FIQ+0x18>
            LDR     R2, [R1]                 //Gets the current value of the  counter
 1c0:	e5912000 	ldr	r2, [r1]
            ADD     R2, R2, #1              //Adds one to the current value of the counter
 1c4:	e2822001 	add	r2, r2, #1
            STR     R2, [R0]               //updates the counter on the timer
 1c8:	e5802000 	str	r2, [r0]
            STR     R2, [R1]               //updates the counter in the program
 1cc:	e5812000 	str	r2, [r1]
            B       EXIT_IRQ
 1d0:	ea000002 	b	1e0 <EXIT_IRQ>

000001d4 <FPGA_IRQ1_HANDLER>:


FPGA_IRQ1_HANDLER:
            CMP     R5, #KEYS_IRQ
 1d4:	e3550049 	cmp	r5, #73	; 0x49

000001d8 <UNEXPECTED>:
UNEXPECTED: BNE     UNEXPECTED              // if not recognized, stop here
 1d8:	1afffffe 	bne	1d8 <UNEXPECTED>

            BL      KEY_ISR
 1dc:	ebffffc0 	bl	e4 <KEY_ISR>

000001e0 <EXIT_IRQ>:
EXIT_IRQ:
/* Write to the End of Interrupt Register (ICCEOIR) */
            STR     R5, [R4, #ICCEOIR]      // write to ICCEOIR
 1e0:	e5845010 	str	r5, [r4, #16]

            POP     {R0-R7, LR}
 1e4:	e8bd40ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
            SUBS    PC, LR, #4
 1e8:	e25ef004 	subs	pc, lr, #4

000001ec <SERVICE_FIQ>:

/*--- FIQ ---------------------------------------------------------------------*/
SERVICE_FIQ:
            B       SERVICE_FIQ
 1ec:	eafffffe 	b	1ec <SERVICE_FIQ>
 1f0:	ff200050 	.word	0xff200050
 1f4:	fffec600 	.word	0xfffec600
 1f8:	05f5e100 	.word	0x05f5e100
 1fc:	fffec100 	.word	0xfffec100
 200:	ff200000 	.word	0xff200000
 204:	00000148 	.word	0x00000148
